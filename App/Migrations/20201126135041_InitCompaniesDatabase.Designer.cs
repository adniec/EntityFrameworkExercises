// <auto-generated />
using App;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20201126135041_InitCompaniesDatabase")]
    partial class InitCompaniesDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("App.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("App.Customer", b =>
                {
                    b.HasBaseType("App.Company");

                    b.Property<int>("Discount")
                        .HasColumnType("INTEGER");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("App.Supplier", b =>
                {
                    b.HasBaseType("App.Company");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("TEXT");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("App.Customer", b =>
                {
                    b.HasOne("App.Company", null)
                        .WithOne()
                        .HasForeignKey("App.Customer", "CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Supplier", b =>
                {
                    b.HasOne("App.Company", null)
                        .WithOne()
                        .HasForeignKey("App.Supplier", "CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
